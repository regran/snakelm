var _user$project$Main$drawBod = F2(
	function (b, color) {
		return A2(
			_elm_lang$svg$Svg$rect,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$fill(color),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height('30'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$width('30'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$x(
								_elm_lang$core$Basics$toString(b.x * 30)),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$y(
									_elm_lang$core$Basics$toString(b.y * 30)),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Main$drawSnake = function (model) {
	return {
		ctor: '::',
		_0: A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$height('100%'),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$width('100%'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(_user$project$Main$drawBod, model.food, '#EE312F'),
				_1: _elm_lang$core$List$concat(
					{
						ctor: '::',
						_0: A3(
							_elm_lang$core$List$foldr,
							_elm_lang$core$List$append,
							{ctor: '[]'},
							A2(
								_elm_lang$core$List$map,
								function (s) {
									return {
										ctor: '::',
										_0: A2(_user$project$Main$drawBod, s, '#00B4EB'),
										_1: {ctor: '[]'}
									};
								},
								model.snake)),
						_1: {
							ctor: '::',
							_0: A3(
								_elm_lang$core$List$foldr,
								_elm_lang$core$List$append,
								{ctor: '[]'},
								A2(
									_elm_lang$core$List$map,
									function (s) {
										return {
											ctor: '::',
											_0: A2(_user$project$Main$drawBod, s, '#7C8084'),
											_1: {ctor: '[]'}
										};
									},
									model.blocks)),
							_1: {ctor: '[]'}
						}
					})
			}),
		_1: {ctor: '[]'}
	};
};
var _user$project$Main$view = function (model) {
	var _p0 = model.inplay;
	if (_p0.ctor === 'InProgress') {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('container'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('meow'),
						_1: {ctor: '[]'}
					},
					_user$project$Main$drawSnake(model)),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$html$Html$node,
						'link',
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$href('style.css'),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('dead'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Game Over'),
				_1: {
					ctor: '::',
					_0: A3(
						_elm_lang$html$Html$node,
						'link',
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$href('style.css'),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$Main$overlap = F2(
	function (x, f) {
		return _elm_lang$core$Native_Utils.eq(x.x, f.x) && _elm_lang$core$Native_Utils.eq(x.y, f.y);
	});
var _user$project$Main$overlapsblock = F2(
	function (m, f) {
		return A3(
			_elm_lang$core$List$foldl,
			F2(
				function (n, a) {
					return a ? a : n;
				}),
			false,
			A2(
				_elm_lang$core$List$map,
				_user$project$Main$overlap(f),
				m.blocks));
	});
var _user$project$Main$move = F2(
	function (snek, h) {
		return {
			ctor: '::',
			_0: h,
			_1: _elm_lang$core$List$reverse(
				A2(
					_elm_lang$core$Maybe$withDefault,
					{ctor: '[]'},
					_elm_lang$core$List$tail(
						_elm_lang$core$List$reverse(snek))))
		};
	});
var _user$project$Main$scale = 5;
var _user$project$Main$Model = F6(
	function (a, b, c, d, e, f) {
		return {xchange: a, ychange: b, snake: c, food: d, blocks: e, inplay: f};
	});
var _user$project$Main$Bod = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$Main$nexth = function (model) {
	return A2(
		_user$project$Main$Bod,
		A2(
			_elm_lang$core$Maybe$withDefault,
			A2(_user$project$Main$Bod, 0, 0),
			_elm_lang$core$List$head(model.snake)).x + model.xchange,
		A2(
			_elm_lang$core$Maybe$withDefault,
			A2(_user$project$Main$Bod, 0, 0),
			_elm_lang$core$List$head(model.snake)).y + model.ychange);
};
var _user$project$Main$Food = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$Main$Block = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$Main$Stopped = {ctor: 'Stopped'};
var _user$project$Main$InProgress = {ctor: 'InProgress'};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A6(
		_user$project$Main$Model,
		0,
		1,
		{ctor: '[]'},
		A2(_user$project$Main$Food, 17, 16),
		{
			ctor: '::',
			_0: A2(_user$project$Main$Bod, 15, 0),
			_1: {
				ctor: '::',
				_0: A2(_user$project$Main$Bod, 11, 2),
				_1: {
					ctor: '::',
					_0: A2(_user$project$Main$Bod, 11, 3),
					_1: {
						ctor: '::',
						_0: A2(_user$project$Main$Bod, 11, 15),
						_1: {
							ctor: '::',
							_0: A2(_user$project$Main$Bod, 11, 16),
							_1: {
								ctor: '::',
								_0: A2(_user$project$Main$Bod, 11, 17),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Main$Bod, 11, 18),
									_1: {
										ctor: '::',
										_0: A2(_user$project$Main$Bod, 11, 19),
										_1: {
											ctor: '::',
											_0: A2(_user$project$Main$Bod, 12, 15),
											_1: {
												ctor: '::',
												_0: A2(_user$project$Main$Bod, 12, 16),
												_1: {
													ctor: '::',
													_0: A2(_user$project$Main$Bod, 12, 17),
													_1: {
														ctor: '::',
														_0: A2(_user$project$Main$Bod, 12, 18),
														_1: {
															ctor: '::',
															_0: A2(_user$project$Main$Bod, 12, 19),
															_1: {
																ctor: '::',
																_0: A2(_user$project$Main$Bod, 13, 15),
																_1: {
																	ctor: '::',
																	_0: A2(_user$project$Main$Bod, 13, 16),
																	_1: {
																		ctor: '::',
																		_0: A2(_user$project$Main$Bod, 13, 17),
																		_1: {
																			ctor: '::',
																			_0: A2(_user$project$Main$Bod, 13, 18),
																			_1: {
																				ctor: '::',
																				_0: A2(_user$project$Main$Bod, 13, 19),
																				_1: {
																					ctor: '::',
																					_0: A2(_user$project$Main$Bod, 14, 15),
																					_1: {
																						ctor: '::',
																						_0: A2(_user$project$Main$Bod, 14, 16),
																						_1: {
																							ctor: '::',
																							_0: A2(_user$project$Main$Bod, 14, 17),
																							_1: {
																								ctor: '::',
																								_0: A2(_user$project$Main$Bod, 14, 18),
																								_1: {
																									ctor: '::',
																									_0: A2(_user$project$Main$Bod, 14, 19),
																									_1: {
																										ctor: '::',
																										_0: A2(_user$project$Main$Bod, 15, 15),
																										_1: {
																											ctor: '::',
																											_0: A2(_user$project$Main$Bod, 15, 16),
																											_1: {
																												ctor: '::',
																												_0: A2(_user$project$Main$Bod, 15, 17),
																												_1: {
																													ctor: '::',
																													_0: A2(_user$project$Main$Bod, 15, 18),
																													_1: {
																														ctor: '::',
																														_0: A2(_user$project$Main$Bod, 15, 19),
																														_1: {
																															ctor: '::',
																															_0: A2(_user$project$Main$Bod, 11, 7),
																															_1: {
																																ctor: '::',
																																_0: A2(_user$project$Main$Bod, 12, 7),
																																_1: {
																																	ctor: '::',
																																	_0: A2(_user$project$Main$Bod, 13, 7),
																																	_1: {
																																		ctor: '::',
																																		_0: A2(_user$project$Main$Bod, 14, 7),
																																		_1: {
																																			ctor: '::',
																																			_0: A2(_user$project$Main$Bod, 15, 7),
																																			_1: {
																																				ctor: '::',
																																				_0: A2(_user$project$Main$Bod, 16, 7),
																																				_1: {
																																					ctor: '::',
																																					_0: A2(_user$project$Main$Bod, 17, 7),
																																					_1: {
																																						ctor: '::',
																																						_0: A2(_user$project$Main$Bod, 18, 7),
																																						_1: {
																																							ctor: '::',
																																							_0: A2(_user$project$Main$Bod, 19, 7),
																																							_1: {
																																								ctor: '::',
																																								_0: A2(_user$project$Main$Bod, 12, 7),
																																								_1: {
																																									ctor: '::',
																																									_0: A2(_user$project$Main$Bod, 11, 8),
																																									_1: {
																																										ctor: '::',
																																										_0: A2(_user$project$Main$Bod, 12, 8),
																																										_1: {
																																											ctor: '::',
																																											_0: A2(_user$project$Main$Bod, 13, 8),
																																											_1: {
																																												ctor: '::',
																																												_0: A2(_user$project$Main$Bod, 14, 8),
																																												_1: {
																																													ctor: '::',
																																													_0: A2(_user$project$Main$Bod, 15, 8),
																																													_1: {
																																														ctor: '::',
																																														_0: A2(_user$project$Main$Bod, 16, 8),
																																														_1: {
																																															ctor: '::',
																																															_0: A2(_user$project$Main$Bod, 17, 8),
																																															_1: {
																																																ctor: '::',
																																																_0: A2(_user$project$Main$Bod, 18, 8),
																																																_1: {
																																																	ctor: '::',
																																																	_0: A2(_user$project$Main$Bod, 19, 8),
																																																	_1: {
																																																		ctor: '::',
																																																		_0: A2(_user$project$Main$Bod, 15, 9),
																																																		_1: {
																																																			ctor: '::',
																																																			_0: A2(_user$project$Main$Bod, 16, 9),
																																																			_1: {
																																																				ctor: '::',
																																																				_0: A2(_user$project$Main$Bod, 17, 9),
																																																				_1: {
																																																					ctor: '::',
																																																					_0: A2(_user$project$Main$Bod, 18, 9),
																																																					_1: {
																																																						ctor: '::',
																																																						_0: A2(_user$project$Main$Bod, 19, 9),
																																																						_1: {
																																																							ctor: '::',
																																																							_0: A2(_user$project$Main$Bod, 8, 9),
																																																							_1: {
																																																								ctor: '::',
																																																								_0: A2(_user$project$Main$Bod, 8, 12),
																																																								_1: {
																																																									ctor: '::',
																																																									_0: A2(_user$project$Main$Bod, 8, 15),
																																																									_1: {
																																																										ctor: '::',
																																																										_0: A2(_user$project$Main$Bod, 8, 18),
																																																										_1: {
																																																											ctor: '::',
																																																											_0: A2(_user$project$Main$Bod, 2, 4),
																																																											_1: {
																																																												ctor: '::',
																																																												_0: A2(_user$project$Main$Bod, 3, 4),
																																																												_1: {
																																																													ctor: '::',
																																																													_0: A2(_user$project$Main$Bod, 4, 4),
																																																													_1: {
																																																														ctor: '::',
																																																														_0: A2(_user$project$Main$Bod, 2, 11),
																																																														_1: {
																																																															ctor: '::',
																																																															_0: A2(_user$project$Main$Bod, 3, 11),
																																																															_1: {
																																																																ctor: '::',
																																																																_0: A2(_user$project$Main$Bod, 4, 11),
																																																																_1: {
																																																																	ctor: '::',
																																																																	_0: A2(_user$project$Main$Bod, 2, 12),
																																																																	_1: {
																																																																		ctor: '::',
																																																																		_0: A2(_user$project$Main$Bod, 3, 12),
																																																																		_1: {
																																																																			ctor: '::',
																																																																			_0: A2(_user$project$Main$Bod, 4, 12),
																																																																			_1: {
																																																																				ctor: '::',
																																																																				_0: A2(_user$project$Main$Bod, 2, 13),
																																																																				_1: {
																																																																					ctor: '::',
																																																																					_0: A2(_user$project$Main$Bod, 3, 13),
																																																																					_1: {
																																																																						ctor: '::',
																																																																						_0: A2(_user$project$Main$Bod, 4, 13),
																																																																						_1: {
																																																																							ctor: '::',
																																																																							_0: A2(_user$project$Main$Bod, 6, 9),
																																																																							_1: {
																																																																								ctor: '::',
																																																																								_0: A2(_user$project$Main$Bod, 6, 12),
																																																																								_1: {
																																																																									ctor: '::',
																																																																									_0: A2(_user$project$Main$Bod, 6, 15),
																																																																									_1: {
																																																																										ctor: '::',
																																																																										_0: A2(_user$project$Main$Bod, 6, 18),
																																																																										_1: {ctor: '[]'}
																																																																									}
																																																																								}
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		_user$project$Main$InProgress),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$Noop = {ctor: 'Noop'};
var _user$project$Main$Die = function (a) {
	return {ctor: 'Die', _0: a};
};
var _user$project$Main$NeedNew = {ctor: 'NeedNew'};
var _user$project$Main$NewFood = function (a) {
	return {ctor: 'NewFood', _0: a};
};
var _user$project$Main$neednew = F2(
	function (mod, tup) {
		return A2(
			_user$project$Main$overlapsblock,
			mod,
			A2(
				_user$project$Main$Food,
				_elm_lang$core$Tuple$first(tup),
				_elm_lang$core$Tuple$second(tup))) ? _user$project$Main$NeedNew : _user$project$Main$NewFood(tup);
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Go':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							snake: A2(
								_user$project$Main$move,
								model.snake,
								_user$project$Main$nexth(model))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Right':
				return {
					ctor: '_Tuple2',
					_0: A6(_user$project$Main$Model, 1, 0, model.snake, model.food, model.blocks, model.inplay),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Left':
				return {
					ctor: '_Tuple2',
					_0: A6(_user$project$Main$Model, -1, 0, model.snake, model.food, model.blocks, model.inplay),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Down':
				return {
					ctor: '_Tuple2',
					_0: A6(_user$project$Main$Model, 0, 1, model.snake, model.food, model.blocks, model.inplay),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Up':
				return {
					ctor: '_Tuple2',
					_0: A6(_user$project$Main$Model, 0, -1, model.snake, model.food, model.blocks, model.inplay),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Eat':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							snake: _elm_lang$core$List$concat(
								{
									ctor: '::',
									_0: model.snake,
									_1: {
										ctor: '::',
										_0: {
											ctor: '::',
											_0: _user$project$Main$nexth(model),
											_1: {ctor: '[]'}
										},
										_1: {ctor: '[]'}
									}
								})
						}),
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Main$neednew(model),
						A2(
							_elm_lang$core$Random$pair,
							A2(_elm_lang$core$Random$int, 0, 19),
							A2(_elm_lang$core$Random$int, 0, 19)))
				};
			case 'NewFood':
				var _p2 = _p1._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							food: A2(
								_user$project$Main$Food,
								_elm_lang$core$Tuple$first(_p2),
								_elm_lang$core$Tuple$second(_p2))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'NeedNew':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Main$neednew(model),
						A2(
							_elm_lang$core$Random$pair,
							A2(_elm_lang$core$Random$int, 0, 19),
							A2(_elm_lang$core$Random$int, 0, 19)))
				};
			case 'Die':
				return {
					ctor: '_Tuple2',
					_0: A6(_user$project$Main$Model, 0, 0, model.snake, model.food, model.blocks, _user$project$Main$Stopped),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$newfood = F2(
	function (mod, tup) {
		return _user$project$Main$NewFood(tup);
	});
var _user$project$Main$Eat = function (a) {
	return {ctor: 'Eat', _0: a};
};
var _user$project$Main$Down = {ctor: 'Down'};
var _user$project$Main$Up = {ctor: 'Up'};
var _user$project$Main$up = function (model) {
	return _elm_lang$core$Native_Utils.eq(model.ychange, 0) ? _user$project$Main$Up : _user$project$Main$Down;
};
var _user$project$Main$down = function (model) {
	return _elm_lang$core$Native_Utils.eq(model.ychange, 0) ? _user$project$Main$Down : _user$project$Main$Up;
};
var _user$project$Main$Left = {ctor: 'Left'};
var _user$project$Main$Right = {ctor: 'Right'};
var _user$project$Main$left = function (model) {
	return _elm_lang$core$Native_Utils.eq(model.xchange, 0) ? _user$project$Main$Left : _user$project$Main$Right;
};
var _user$project$Main$right = function (model) {
	return _elm_lang$core$Native_Utils.eq(model.xchange, 0) ? _user$project$Main$Right : _user$project$Main$Left;
};
var _user$project$Main$key = F2(
	function (m, code) {
		var _p3 = code;
		switch (_p3) {
			case 37:
				return _user$project$Main$left(m);
			case 39:
				return _user$project$Main$right(m);
			case 38:
				return _user$project$Main$up(m);
			case 40:
				return _user$project$Main$down(m);
			case 87:
				return _user$project$Main$up(m);
			case 65:
				return _user$project$Main$left(m);
			case 83:
				return _user$project$Main$down(m);
			case 68:
				return _user$project$Main$right(m);
			default:
				return _user$project$Main$Noop;
		}
	});
var _user$project$Main$Go = function (a) {
	return {ctor: 'Go', _0: a};
};
var _user$project$Main$tick = function (model) {
	return A2(
		_user$project$Main$overlap,
		A2(
			_elm_lang$core$Maybe$withDefault,
			A2(_user$project$Main$Bod, 0, 0),
			_elm_lang$core$List$head(model.snake)),
		model.food) ? _user$project$Main$Eat : (((_elm_lang$core$Native_Utils.cmp(
		A2(
			_elm_lang$core$Maybe$withDefault,
			A2(_user$project$Main$Bod, 0, 0),
			_elm_lang$core$List$head(model.snake)).x,
		19) > 0) || ((_elm_lang$core$Native_Utils.cmp(
		A2(
			_elm_lang$core$Maybe$withDefault,
			A2(_user$project$Main$Bod, 0, 0),
			_elm_lang$core$List$head(model.snake)).x,
		0) < 0) || ((_elm_lang$core$Native_Utils.cmp(
		A2(
			_elm_lang$core$Maybe$withDefault,
			A2(_user$project$Main$Bod, 0, 0),
			_elm_lang$core$List$head(model.snake)).y,
		0) < 0) || ((_elm_lang$core$Native_Utils.cmp(
		A2(
			_elm_lang$core$Maybe$withDefault,
			A2(_user$project$Main$Bod, 0, 0),
			_elm_lang$core$List$head(model.snake)).y,
		19) > 0) || (A3(
		_elm_lang$core$List$foldl,
		F2(
			function (n, a) {
				return a ? a : n;
			}),
		false,
		A2(
			_elm_lang$core$List$map,
			_user$project$Main$overlap(
				A2(
					_elm_lang$core$Maybe$withDefault,
					A2(_user$project$Main$Bod, 0, 0),
					_elm_lang$core$List$head(model.snake))),
			A2(
				_elm_lang$core$Maybe$withDefault,
				{ctor: '[]'},
				_elm_lang$core$List$tail(model.snake)))) || A2(
		_user$project$Main$overlapsblock,
		model,
		A2(
			_elm_lang$core$Maybe$withDefault,
			A2(_user$project$Main$Bod, 0, 0),
			_elm_lang$core$List$head(model.snake)))))))) ? _user$project$Main$Die : _user$project$Main$Go);
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Time$every,
				100,
				_user$project$Main$tick(model)),
			_1: {
				ctor: '::',
				_0: _elm_lang$keyboard$Keyboard$ups(
					_user$project$Main$key(model)),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
